using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using YoutubeDLSharp;
using YoutubeDLSharp.Options;
using YoutubeDLSharp.Metadata;
using System.Configuration;
using System.Collections.Specialized;
using static vomark.app.VomarkUtil;

namespace vomark.app
{
    public static class YTIntegration
    {

        private readonly static OptionSet subExtractOptions = new()
        {
            WriteSubs = true,
            WriteAutoSubs = true,
            SubLangs = ConfigurationManager.AppSettings.Get("SubLang") ?? "en",
            SubFormat = "srt",
            SkipDownload = true
        };

        public static async Task<bool> SetupPackages(string path)
        {
            string[] files = Directory.GetFiles(path);
            try
            {
                if (!files.Contains($"{path}\\yt-dlp.exe")) { await Utils.DownloadYtDlp(path); Debug.WriteLine("Downloaded yt-dlp!"); }
                if (!files.Contains($"{path}\\ffmpeg.exe")) { await Utils.DownloadFFmpeg(path); Debug.WriteLine("Downloaded ffmpeg!"); }
                return true;
            }
            catch (Exception e)
            {
                Debug.WriteLine(e.Message);
                return false;
            }
        }

        public static async Task<string> FetchSubtitles(YoutubeDL yt, string url)
        {
            var res = await yt.RunVideoDownload(url, overrideOptions: subExtractOptions)
                ?? throw new ArgumentException("Could not fetch subtitles from URL");
            string file = Directory.GetFiles(yt.OutputFolder, "*.srt").FirstOrDefault()
                ?? throw new ArgumentException("No file found in default output folder");
            string data = File.ReadAllText(file);
            // With autogenerated subtitles, there is no clear way to break text into sentences.
            string sanitized = Regex.Replace(data, "(?:\\r?\\n)*\\d+\\r?\\n\\d{2}:\\d{2}:\\d{2},\\d{3} --> \\d{2}:\\d{2}:\\d{2},\\d{3}\\r?\\n", " ");
            sanitized = VomarkReader.SanitizeText(sanitized);

            // Housekeeping to ensure that there is only one file in the directory at any given time
            // MAY NEED TO BE AMENDED FOR ASYNC PLAYLIST READING
            File.Delete(file);
            return sanitized;
        }

        public static async Task<bool> YTAppendGraph(YoutubeDL yt, string url, VomGraph vg)
        {
            string data = await FetchSubtitles(yt, url);
            try
            {
                VomarkReader.AppendGraph(data, vg);
                return true;
            }
            catch (Exception e)
            {
                Debug.WriteLine(e.Message);
                return false;
            }
        }
    }
}
